<?php

namespace AppBundle\Repository;

/**
 * MsvInventarioSenialRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MsvInventarioSenialRepository extends \Doctrine\ORM\EntityRepository
{
    //Get the inventory of signals inventory
    public function getSearch($params){
        $em = $this->getEntityManager();

        $sql = array();"";
        if (isset($params->destinoId)) {
            $sql['destinoId'] =  "s.tipoDestino = :tipoDestino";
        }

        if (isset($params->tipoDestinoId)) {
            $sql['tipoDestinoId'] = "s.xDestino = :tipoDestinoSelected";
        }

        if (isset($params->tipoSenalId)) {
            $sql['tipoSenalId'] = " s.tipoSenial = :tipoSenalSelected";
        }

        $where = $result = "";
        if(count($sql) > 0){
            $where = " WHERE ";
        }
        $build = "";
        foreach($sql as $key=>$value)
        {
            $build.=$value." AND ";
        }

        $result = trim($build, " AND ");

        $dql = "SELECT DISTINCT i
                FROM AppBundle:MsvSenial s
                 JOIN AppBundle:MsvInventarioSenial is WITH s.inventarioSenialId = is.id
                 JOIN AppBundle:CfgInventario i WITH is.inventario = i.id
                 JOIN AppBundle:CfgTipoSenial s WITH s.tipoSenial = s.id
                 JOIN AppBundle:CfgTipoDestino d WITH s.tipoDestino = d.id".$where.$result;

        $consulta = $em->createQuery($dql);

        $parameters = array();
        if (isset($params->destinoId)) {
            $parameters['tipoDestino'] = $params->destinoId;
        }

        if (isset($params->tipoDestinoId)) {
            $parameters['tipoDestinoSelected'] = $params->tipoDestinoId;
        }

        if (isset($params->tipoSenalId)) {
            $parameters['tipoSenalSelected'] = $params->tipoSenalId;
        }

        $consulta->setParameters($parameters);

        return $consulta->getResult();
    }

    //Get the inventory of signals inventory
    public function getBySenial($params){
        $em = $this->getEntityManager();

            $dql = "SELECT is.id AS ID,
                i.numero AS NUMERO_INVENTARIO,
                i.fecha AS FECHA_INVENTARIO,
                is.fecha AS FECHA_INGRESO,
                is.unidad AS UNIDAD,
                c.nombre AS COLOR,
                c.hex AS HEX,
                is.latitud AS LATITUD,
                is.longitud AS LONGITUD,
                is.direccion AS DIRECCION,
                is.codigo AS CODIGO,
                is.logo AS LOGO,
                is.nombre AS NOMBRE,
                is.valor AS VALOR,
                e.nombre AS ESTADO,
                is.cantidad AS CANTIDAD,
                s.archivo AS ARCHIVO
                FROM AppBundle:MsvInventarioSenial is
                JOIN AppBundle:MsvSenial s WITH s.inventarioSenialId = is.id
                JOIN AppBundle:CfgInventario i WITH is.inventario = i.id
                JOIN AppBundle:CfgTipoColor c WITH is.tipoColor = c.id
                JOIN AppBundle:CfgTipoEstado e WITH is.tipoEstado = e.id
                WHERE ((i.id = :idInv)
                AND (i.fecha = :dateInv)
                AND (s.tipoSenial = :typeSen))";

        $consulta = $em->createQuery($dql);
        $consulta->setParameters(array(
            'idInv' => @$params->idInv,
            'dateInv' => @$params->dateInv,
            'typeSen' => @$params->typeSen
        ));

        return $consulta->getResult();
    }

    //Get the inventory of signals inventory
    public function getFull(){
        $em = $this->getEntityManager();

        $dql = "SELECT is.id AS ID,
                i.numero AS NUMERO_INVENTARIO,
                i.fecha AS FECHA_INVENTARIO,
                is.fecha AS FECHA_INGRESO,
                is.unidad AS UNIDAD,
                c.nombre AS COLOR,
                c.hex AS HEX,
                is.latitud AS LATITUD,
                is.longitud AS LONGITUD,
                is.direccion AS DIRECCION,
                is.codigo AS CODIGO,
                is.logo AS LOGO,
                is.nombre AS NOMBRE,
                is.valor AS VALOR,
                e.nombre AS ESTADO,
                is.cantidad AS CANTIDAD,
                s.archivo AS ARCHIVO
                FROM AppBundle:MsvInventarioSenial is
                JOIN AppBundle:MsvSenial s WITH s.inventarioSenialId = is.id
                JOIN AppBundle:CfgInventario i WITH is.inventario = i.id
                JOIN AppBundle:CfgTipoColor c WITH is.tipoColor = c.id
                JOIN AppBundle:CfgTipoEstado e WITH is.tipoEstado = e.id";

        $consulta = $em->createQuery($dql);

        return $consulta->getResult();
    }

    //Get the inventory of signals inventory
    public function getFullInv(){
        $em = $this->getEntityManager();

            $dql = "SELECT is.id AS ID,
                i.numero AS NUMERO_INVENTARIO,
                i.fecha AS FECHA_INVENTARIO,
                d.nombre AS TIPO_DESTINO,
                (CASE
                 WHEN (d.id = 1)
                 THEN b.nombre
                 ELSE m.nombre
                 END) AS NOMBRE_DESTINO,
                s.nombre AS TIPO,
                is.fecha AS FECHA_INGRESO,
                is.unidad AS UNIDAD,
                c.nombre AS COLOR,
                c.hex AS HEX,
                is.latitud AS LATITUD,
                is.longitud AS LONGITUD,
                is.codigo AS CODIGO,
                is.logo AS LOGO,
                is.nombre AS NOMBRE,
                is.valor AS VALOR,
                e.nombre AS ESTADO,
                is.cantidad AS CANTIDAD,
                s.archivo AS ARCHIVO
                FROM AppBundle:MsvInventarioSenial is
                JOIN AppBundle:MsvSenial s WITH s.inventarioSenialId = is.id
                JOIN AppBundle:CfgInventario i WITH is.inventario = i.id
                JOIN AppBundle:CfgTipoColor c WITH is.tipoColor = c.id
                JOIN AppBundle:CfgTipoEstado e WITH is.tipoEstado = e.id
                JOIN AppBundle:CfgTipoDestino d WITH s.tipoDestino = d.id
                JOIN AppBundle:CfgTipoSenial s WITH s.tipoSenial = s.id
                LEFT JOIN AppBundle:CfgBodega b WITH s.xDestino = (CASE
                                    WHEN (d.id = 1)
                                    THEN b.id
                                    ELSE ''
                                    END)
                LEFT JOIN AppBundle:Municipio m WITH s.xDestino = (CASE
                                    WHEN (d.id = 2)
                                    THEN m.id
                                    ELSE ''
                                    END)";

        $consulta = $em->createQuery($dql);

        return $consulta->getResult();
    }

    //Get the inventory of signals inventory
    public function getByInv($data){

        $param = array();
        $get = explode("_", $data);
        $param['idInv'] = $get[0];
        $param['dateInv'] = $get[1];
        $param['typeSen'] = $get[2];

        $em = $this->getEntityManager();

        $dql = "SELECT is.id AS ID,
                i.numero AS NUMERO_INVENTARIO,
                i.fecha AS FECHA_INVENTARIO,
                d.nombre AS TIPO_DESTINO,
                (CASE
                 WHEN (d.id = 1)
                 THEN b.nombre
                 ELSE m.nombre
                 END) AS NOMBRE_DESTINO,
                s.nombre AS TIPO,
                is.fecha AS FECHA_INGRESO,
                is.unidad AS UNIDAD,
                c.nombre AS COLOR,
                c.hex AS HEX,
                is.latitud AS LATITUD,
                is.longitud AS LONGITUD,
                is.codigo AS CODIGO,
                is.logo AS LOGO,
                is.nombre AS NOMBRE,
                is.valor AS VALOR,
                e.nombre AS ESTADO,
                is.cantidad AS CANTIDAD,
                s.archivo AS ARCHIVO
                FROM AppBundle:MsvInventarioSenial is
                JOIN AppBundle:MsvSenial s WITH s.inventarioSenialId = is.id
                JOIN AppBundle:CfgInventario i WITH is.inventario = i.id
                JOIN AppBundle:CfgTipoColor c WITH is.tipoColor = c.id
                JOIN AppBundle:CfgTipoEstado e WITH is.tipoEstado = e.id
                JOIN AppBundle:CfgTipoDestino d WITH s.tipoDestino = d.id
                JOIN AppBundle:CfgTipoSenial s WITH s.tipoSenial = s.id
                LEFT JOIN AppBundle:CfgBodega b WITH s.xDestino = (CASE
                                    WHEN (d.id = 1)
                                    THEN b.id
                                    ELSE ''
                                    END)
                LEFT JOIN AppBundle:Municipio m WITH s.xDestino = (CASE
                                    WHEN (d.id = 2)
                                    THEN m.id
                                    ELSE ''
                                    END)
                WHERE ((i.id = :idInv)
                AND (i.fecha = :dateInv)
                AND (s.tipoSenial = :typeSen))";

        $consulta = $em->createQuery($dql);
        $consulta->setParameters(array(
            'idInv' => $param['idInv'],
            'dateInv' => $param['dateInv'],
            'typeSen' => $param['typeSen']
        ));

        return $consulta->getResult();
    }

}
