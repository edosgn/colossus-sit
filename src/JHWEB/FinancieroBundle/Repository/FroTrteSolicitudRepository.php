<?php

namespace JHWEB\FinancieroBundle\Repository;

/**
 * FroTrteSolicitudRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FroTrteSolicitudRepository extends \Doctrine\ORM\EntityRepository
{
	public function getByModuloAndFilter($params)
    {
        $em = $this->getEntityManager();

        switch ($params->tipoFiltro) {
            case 1:
                $dql = "SELECT ts
                FROM JHWEBFinancieroBundle:FroTrteSolicitud ts,
                JHWEBFinancieroBundle:FroFacTramite ft,
                JHWEBFinancieroBundle:FroFactura f, 
                JHWEBConfigBundle:CfgModulo m, 
                JHWEBFinancieroBundle:FroTrtePrecio tp,
                JHWEBVehiculoBundle:VhloVehiculo v,
                JHWEBVehiculoBundle:VhloCfgPlaca p
                WHERE ts.vehiculo = v.id
                AND v.placa = p.id
                AND p.numero = :placa
                AND ft.factura = f.id 
                AND ft.precio = tp.id
                AND tp.modulo = :idModulo
                ORDER BY ts.fecha DESC";

                $consulta = $em->createQuery($dql);

                $consulta->setParameters(array(
                    'idModulo' => $params->idModulo,
                    'placa' => $params->filtro,
                ));
                break;

            case 2:
                $dql = "SELECT ts
                FROM JHWEBFinancieroBundle:FroTrteSolicitud ts,
                JHWEBFinancieroBundle:FroFacTramite ft,
                JHWEBFinancieroBundle:FroFactura f, 
                JHWEBConfigBundle:CfgModulo m, 
                JHWEBFinancieroBundle:FroTrtePrecio tp,
                JHWEBVehiculoBundle:VhloVehiculo v,
                JHWEBVehiculoBundle:VhloCfgPlaca p
                WHERE ts.vehiculo = v.id
                AND v.placa = p.id
                AND ft.factura = f.id 
                AND ft.precio = tp.id
                AND tp.modulo = :idModulo
                AND f.numero = :numero
                ORDER BY ts.fecha DESC";

                $consulta = $em->createQuery($dql);

                $consulta->setParameters(array(
                    'idModulo' => $params->idModulo,
                    'numero' => $params->filtro,
                ));
                break;

            case 3:
                $dql = "SELECT ts
                FROM JHWEBFinancieroBundle:FroTrteSolicitud ts,
                JHWEBFinancieroBundle:FroFacTramite ft,
                JHWEBFinancieroBundle:FroFactura f, 
                JHWEBConfigBundle:CfgModulo m, 
                JHWEBFinancieroBundle:FroTrtePrecio tp,
                JHWEBVehiculoBundle:VhloVehiculo v,
                JHWEBVehiculoBundle:VhloCfgPlaca p
                WHERE ts.vehiculo = v.id
                AND v.placa = p.id
                AND ft.factura = f.id 
                AND ft.precio = tp.id
                AND tp.modulo = :idModulo
                AND ts.fecha = :fecha
                ORDER BY ts.fecha DESC";

                $consulta = $em->createQuery($dql);

                $consulta->setParameters(array(
                    'idModulo' => $params->idModulo,
                    'fecha' => $params->filtro,
                ));
                break;

            case 4:
                $dql = "SELECT ts
                FROM JHWEBFinancieroBundle:FroTrteSolicitud ts,
                JHWEBFinancieroBundle:FroFacTramite ft,
                JHWEBFinancieroBundle:FroFactura f,
                JHWEBConfigBundle:CfgModulo m, 
                JHWEBFinancieroBundle:FroTrtePrecio tp,
                JHWEBVehiculoBundle:VhloVehiculo v,
                JHWEBVehiculoBundle:VhloCfgPlaca p,
                JHWEBVehiculoBundle:VhloPropietario vp,
                JHWEBUsuarioBundle:UserCiudadano uc
                WHERE ts.vehiculo = v.id
                AND v.placa = p.id
                AND ft.factura = f.id 
                AND ft.precio = tp.id
                AND tp.modulo = :idModulo
                AND ts.solicitante = vp.id
                AND vp.vehiculo = v.id
                AND vp.ciudadano = uc.id
                AND uc.identificacion = :identificacion
                ORDER BY ts.fecha DESC";

                $consulta = $em->createQuery($dql);

                $consulta->setParameters(array(
                    'idModulo' => $params->idModulo,
                    'identificacion' => $params->filtro,
                ));
                break;
        }

        return $consulta->getResult();
    }

    public function getMatriculaCancelada($idVehiculo)
    {
        $em = $this->getEntityManager();

        $dql = "SELECT ts
            FROM JHWEBFinancieroBundle:FroFacTramite ft, 
            JHWEBFinancieroBundle:FroTramite t,
            JHWEBFinancieroBundle:FroTrtePrecio tp,
            JHWEBFinancieroBundle:FroTrteSolicitud ts
            WHERE ft.precio = tp.id
            AND tp.tramite = t.id
            AND t.id = 13
            AND ts.tramiteFactura = ft.id
            AND ts.vehiculo = :idVehiculo
            AND ft.realizado = true";
        $consulta = $em->createQuery($dql);

        $consulta->setParameters(array(
            'idVehiculo' => $idVehiculo,
        ));

        return $consulta->getOneOrNullResult();
    }

    public function getOneByVehiculoAndTramite($idVehiculo, $idTramite)
    {
        $em = $this->getEntityManager();

        $dql = "SELECT ts
            FROM JHWEBFinancieroBundle:FroFacTramite ft, 
            JHWEBFinancieroBundle:FroTramite t,
            JHWEBFinancieroBundle:FroTrtePrecio tp,
            JHWEBFinancieroBundle:FroTrteSolicitud ts
            WHERE ts.fecha = (
                SELECT MAX(ts2.fecha)
                FROM JHWEBFinancieroBundle:FroFacTramite ft2, 
                JHWEBFinancieroBundle:FroTramite t2,
                JHWEBFinancieroBundle:FroTrtePrecio tp2,
                JHWEBFinancieroBundle:FroTrteSolicitud ts2
                WHERE ft2.precio = tp2.id
                AND tp2.tramite = t2.id
                AND t2.id = 18
                AND ts2.tramiteFactura = ft2.id
                AND ts2.vehiculo = :idVehiculo
                AND ft2.realizado = true
            )
            AND ft.precio = tp.id
            AND tp.tramite = t.id
            AND t.id = 18
            AND ts.tramiteFactura = ft.id
            AND ts.vehiculo = :idVehiculo
            AND ft.realizado = true
            LIMIT 1";
        $consulta = $em->createQuery($dql);

        $consulta->setParameters(array(
            'idVehiculo' => $idVehiculo
        ));

        return $consulta->getOneOrNullResult();
    }

    public function getTrasladoByVehiculo($idVehiculo)
    {
        $em = $this->getEntityManager();

        $dql = "SELECT ts
            FROM JHWEBFinancieroBundle:FroFacTramite ft, 
            JHWEBFinancieroBundle:FroTramite t,
            JHWEBFinancieroBundle:FroTrtePrecio tp,
            JHWEBFinancieroBundle:FroTrteSolicitud ts
            WHERE ft.tramitePrecio = tp.id
            AND tp.tramite = t.id
            AND t.id = 3
            AND ts.tramiteFactura = ft.id
            AND ts.vehiculo = :idVehiculo
            AND ft.realizado = true";
        $consulta = $em->createQuery($dql);

        $consulta->setParameters(array(
            'idVehiculo' => $idVehiculo,
        ));

        return $consulta->getOneOrNullResult();
    } 

    //Obtiene trámites solicitud según el filtro de búsqueda
    public function getByPlaca($idOrganismoTransito, $idModulo, $fechaDesde, $fechaHasta)
    {
        $em = $this->getEntityManager();
        
        $dql = "SELECT fts
            FROM JHWEBFinancieroBundle:FroTrteSolicitud fts, JHWEBFinancieroBundle:FroFacTramite fft, 
            JHWEBFinancieroBundle:FroTrtePrecio ftp, JHWEBConfigBundle:CfgModulo m,
            JHWEBFinancieroBundle:FroTramite ft
            WHERE  fts.organismoTransito = :idOrganismoTransito
            AND fts.fecha BETWEEN :fechaDesde AND :fechaHasta
            AND fts.tramiteFactura = fft.id
            AND fft.precio = ftp.id
            AND ftp.modulo = :idModulo
            AND ftp.tramite = ft.id
            AND ft.codigo = 1 OR ft.codigo = 4 OR ft.codigo = 22 OR ft.codigo = 23";
        $consulta = $em->createQuery($dql);
        
        $consulta->setParameters(array(
            'idOrganismoTransito' => $idOrganismoTransito,
            'idModulo' => $idModulo,
            'fechaDesde' => $fechaDesde,
            'fechaHasta' => $fechaHasta
        ));
        
        return $consulta->getResult();
    }
    
    //Obtiene trámites solicitud según el filtro de búsqueda
    public function getPropietariosActualesByPlaca($idOrganismoTransito, $idModulo, $idVehiculo)
    {
        $em = $this->getEntityManager();
        $dql = "SELECT vp
            FROM JHWEBVehiculoBundle:VhloPropietario vp, JHWEBVehiculoBundle:VhloVehiculo vv,
            JHWEBVehiculoBundle:VhloCfgClase vcc, JHWEBVehiculoBundle:VhloCfgTipoVehiculo vctv,
            JHWEBConfigBundle:CfgModulo m
            WHERE  vp.vehiculo = :idVehiculo
            AND vv.organismoTransito = :idOrganismoTransito
            AND vv.clase = vcc.id
            AND vcc.tipoVehiculo = vctv.id
            AND vctv.modulo = :idModulo";
        $consulta = $em->createQuery($dql);

        $consulta->setParameters(array(
            'idOrganismoTransito' => $idOrganismoTransito,
            'idModulo' => $idModulo,
            'idVehiculo' => $idVehiculo
        ));
        
        return $consulta->getResult();
    }
    
    //Obtiene trámites solicitud según el filtro de búsqueda
    /* public function getByTramites($idOrganismoTransito, $idModulo, $fechaDesde, $fechaHasta)
    {
        $em = $this->getEntityManager();
        $dql = "SELECT fts
            FROM JHWEBFinancieroBundle:FroTrteSolicitud fts, JHWEBFinancieroBundle:FroFacTramite fft, 
            JHWEBFinancieroBundle:FroTrtePrecio ftp, JHWEBConfigBundle:CfgModulo m,
            JHWEBFinancieroBundle:FroTramite ft
            WHERE  fts.organismoTransito = :idOrganismoTransito
            AND fts.fecha BETWEEN :fechaDesde AND :fechaHasta
            AND fts.tramiteFactura = fft.id
            AND fft.precio = ftp.id
            AND ftp.modulo = :idModulo";
        $consulta = $em->createQuery($dql);
    
        $consulta->setParameters(array(
            'idOrganismoTransito' => $idOrganismoTransito,
            'idModulo' => $idModulo,
            'fechaDesde' => $fechaDesde,
            'fechaHasta' => $fechaHasta
        ));
        
        return $consulta->getResult();
    } */
    
    //Obtiene trámites solicitud según el filtro de búsqueda
    public function getByTramites($idOrganismoTransito, $idModulo, $fechaDesde, $fechaHasta)
    {
        $em = $this->getEntityManager();
        $dql = "SELECT fts
            FROM JHWEBFinancieroBundle:FroTrteSolicitud fts, 
            JHWEBUsuarioBundle:UserCiudadano c, 
            JHWEBVehiculoBundle:VhloPropietario vp, 
            JHWEBVehiculoBundle:VhloVehiculo v,
            JHWEBVehiculoBundle:VhloCfgClase vcc,
            JHWEBVehiculoBundle:VhloCfgTipoVehiculo vctv,
            JHWEBConfigBundle:CfgModulo m

            WHERE fts.ciudadano = c.id
            AND fts.vehiculo = v.id
            AND vp.ciudadano = c.id
            AND v.organismoTransito = :idOrganismoTransito
            AND v.clase = vcc.id
            AND vcc.tipoVehiculo = vctv.id
            AND vctv.modulo = :idModulo
            AND vp.activo = 1
            AND v.activo = 1
            AND vp.fechaInicial BETWEEN :fechaDesde AND :fechaHasta";

        $consulta = $em->createQuery($dql);
    
        $consulta->setParameters(array(
            'idOrganismoTransito' => $idOrganismoTransito,
            'idModulo' => $idModulo,
            'fechaDesde' => $fechaDesde,
            'fechaHasta' => $fechaHasta
        ));
        
        return $consulta->getResult();
    }
    
    //Obtiene medidas cautelares según el filtro de búsqueda
    public function getByMedidasCautelares($fechaDesde, $fechaHasta)
    {
        $em = $this->getEntityManager();
        $dql = "SELECT umc
            FROM JHWEBUsuarioBundle:UserMedidaCautelar umc
            WHERE umc.fechaRegistro BETWEEN :fechaDesde AND :fechaHasta";

        $consulta = $em->createQuery($dql);
    
        $consulta->setParameters(array(
            'fechaDesde' => $fechaDesde,
            'fechaHasta' => $fechaHasta
        ));
        
        return $consulta->getResult();
    }
     
        //Obtiene trámites solicitud según el filtro de búsqueda
    public function getByCancelacionMatricula($idOrganismoTransito, $idModulo, $fechaInicial, $fechaFinal)
    {
        $em = $this->getEntityManager();
        $dql = "SELECT fts
            FROM JHWEBFinancieroBundle:FroTrteSolicitud fts, JHWEBFinancieroBundle:FroFacTramite fft, 
            JHWEBFinancieroBundle:FroTrtePrecio ftp, JHWEBConfigBundle:CfgModulo m,
            JHWEBFinancieroBundle:FroTramite ft
            WHERE  fts.organismoTransito = :idOrganismoTransito
            AND fts.fecha BETWEEN :fechaInicial AND :fechaFinal
            AND fts.tramiteFactura = fft.id
            AND fft.precio = ftp.id
            AND ftp.modulo = :idModulo
            AND ftp.tramite = ft.id
            AND ft.codigo = 13";
        $consulta = $em->createQuery($dql);

        $consulta->setParameters(array(
            'idOrganismoTransito' => $idOrganismoTransito,
            'idModulo' => $idModulo,
            'fechaInicial' => $fechaInicial,
            'fechaFinal' => $fechaFinal
        ));
        
        return $consulta->getResult();
    }

    //Obtiene trámites solicitud según el filtro de búsqueda
    public function getByPrendas($idOrganismoTransito, $idModulo, $fechaInicial, $fechaFinal)
    {
        $em = $this->getEntityManager();
        $dql = "SELECT fts as tramiteSolicitud, va.id as idAcreedor
            FROM JHWEBFinancieroBundle:FroTrteSolicitud fts, JHWEBFinancieroBundle:FroFacTramite fft, 
            JHWEBFinancieroBundle:FroTrtePrecio ftp, JHWEBConfigBundle:CfgModulo m,
            JHWEBFinancieroBundle:FroTramite ft,
            JHWEBVehiculoBundle:VhloAcreedor va,
            JHWEBVehiculoBundle:VhloVehiculo v

            WHERE  fts.organismoTransito = :idOrganismoTransito
            AND fts.fecha BETWEEN :fechaInicial AND :fechaFinal
            AND fts.tramiteFactura = fft.id
            AND fts.vehiculo = v.id
            AND v.id = va.vehiculo
            AND va.activo = 1
            AND fft.precio = ftp.id
            AND ftp.modulo = :idModulo
            AND ftp.tramite = ft.id
            AND ft.codigo = 11";
        $consulta = $em->createQuery($dql);

        $consulta->setParameters(array(
            'idOrganismoTransito' => $idOrganismoTransito,
            'idModulo' => $idModulo,
            'fechaInicial' => $fechaInicial,
            'fechaFinal' => $fechaFinal
        ));
        
        return $consulta->getResult();
    }

    //Obtiene trámites solicitud según el filtro de búsqueda
    public function getByRadicadosCuenta($idOrganismoTransito, $idModulo, $fechaInicial, $fechaFinal)
    {
        $em = $this->getEntityManager();
        $dql = "SELECT fts
            FROM JHWEBFinancieroBundle:FroTrteSolicitud fts, JHWEBFinancieroBundle:FroFacTramite fft, 
            JHWEBFinancieroBundle:FroTrtePrecio ftp, JHWEBConfigBundle:CfgModulo m,
            JHWEBFinancieroBundle:FroTramite ft
            WHERE  fts.organismoTransito = :idOrganismoTransito
            AND fts.fecha BETWEEN :fechaInicial AND :fechaFinal
            AND fts.tramiteFactura = fft.id
            AND fft.precio = ftp.id
            AND ftp.modulo = :idModulo
            AND ftp.tramite = ft.id
            AND ft.codigo = 4";
        $consulta = $em->createQuery($dql);

        $consulta->setParameters(array(
            'idOrganismoTransito' => $idOrganismoTransito,
            'idModulo' => $idModulo,
            'fechaInicial' => $fechaInicial,
            'fechaFinal' => $fechaFinal
        ));
        
        return $consulta->getResult();
    }

    //Obtiene trámites solicitud de tipo radicados de cuenta para creación de placas solicitadas
    public function getRadicadosCuentaForPlacas($idOrganismoTransito)
    {
        $em = $this->getEntityManager();

        $dql = "SELECT fts
        FROM JHWEBFinancieroBundle:FroTrteSolicitud fts, 
        JHWEBFinancieroBundle:FroFacTramite fft, 
        JHWEBFinancieroBundle:FroTrtePrecio ftp,
        JHWEBFinancieroBundle:FroTramite ft,
        JHWEBVehiculoBundle:VhloVehiculo v,
        JHWEBVehiculoBundle:VhloCfgPlaca p
        WHERE  fts.organismoTransito = :idOrganismoTransito
        AND fts.tramiteFactura = fft.id
        AND fft.precio = ftp.id
        AND ftp.tramite = ft.id
        AND fts.vehiculo = v.id
        AND v.placa = p.id
        AND fts.activo = true
        AND ft.codigo = 4
        AND p.estado = 'SOLICITADA'";
        
        $consulta = $em->createQuery($dql);

        $consulta->setParameters(array(
            'idOrganismoTransito' => $idOrganismoTransito,
        ));
        
        return $consulta->getResult();
    }

    //Obtiene trámites solicitud según el id del vehiculo
    public function findByVehiculo($idVehiculo)
    {
        $em = $this->getEntityManager();
        $dql = "SELECT fts
            FROM JHWEBFinancieroBundle:FroTrteSolicitud fts, JHWEBFinancieroBundle:FroFacTramite fft, 
            JHWEBFinancieroBundle:FroTrtePrecio ftp, JHWEBConfigBundle:CfgModulo m,
            JHWEBFinancieroBundle:FroTramite ft, JHWEBVehiculoBundle:VhloVehiculo v
            WHERE v.id = :idVehiculo
            AND v.activo = 1
            AND fts.vehiculo = v.id 
            AND fts.tramiteFactura = fft.id
            AND fft.precio = ftp.id
            AND fft.realizado = 1
            AND ftp.tramite = 4";

        $consulta = $em->createQuery($dql);

        $consulta->setParameters(array(
            'idVehiculo' => $idVehiculo
        ));
        
        return $consulta->getResult();
    }
}
